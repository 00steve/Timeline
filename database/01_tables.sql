USE Timeline;
GO


IF (EXISTS (SELECT *  FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_SCHEMA = 'Timeline' AND  TABLE_NAME = 'EventTag'))
	DROP TABLE Timeline.EventTag;



IF (EXISTS (SELECT *  FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_SCHEMA = 'Timeline' AND  TABLE_NAME = 'TimelineTag'))
	DROP TABLE Timeline.TimelineTag;
	
IF (EXISTS (SELECT *  FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_SCHEMA = 'Timeline' AND  TABLE_NAME = 'Tag'))
	DROP TABLE Timeline.Tag;
	
IF (EXISTS (SELECT *  FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_SCHEMA = 'Timeline' AND  TABLE_NAME = 'EventReference'))
	DROP TABLE Timeline.EventReference;
	
IF (EXISTS (SELECT *  FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_SCHEMA = 'Timeline' AND  TABLE_NAME = 'Status'))
	DROP TABLE Timeline.[Status];
	
IF (EXISTS (SELECT *  FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_SCHEMA = 'Timeline' AND  TABLE_NAME = 'MediaType'))
	DROP TABLE Timeline.MediaType;
	
IF (EXISTS (SELECT *  FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_SCHEMA = 'Timeline' AND  TABLE_NAME = 'Event'))
	DROP TABLE Timeline.Event;
	
IF (EXISTS (SELECT *  FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_SCHEMA = 'Timeline' AND  TABLE_NAME = 'Timeline'))
	DROP TABLE Timeline.Timeline;

	
IF (EXISTS (SELECT *  FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_SCHEMA = 'Timeline' AND  TABLE_NAME = 'TimeScale'))
	DROP TABLE Timeline.TimeScale;

IF (EXISTS (SELECT *  FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_SCHEMA = 'Timeline' AND  TABLE_NAME = 'Unit'))
	DROP TABLE Timeline.Unit;

IF (EXISTS (SELECT *  FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_SCHEMA = 'Timeline' AND  TABLE_NAME = 'User'))
	DROP TABLE Timeline.[User];



--CREATE TABLE Timeline.TimeScale(
--	ID TINYINT PRIMARY KEY,
--	[Name] VARCHAR(20) NOT NULL,
--	[Description] VARCHAR(1000) NOT NULL
--);


CREATE TABLE Timeline.Unit (
	ID TINYINT PRIMARY KEY,
	[Name] VARCHAR(20) NOT NULL,
	[Description] VARCHAR(1000) NOT NULL

);



CREATE TABLE Timeline.[User] (
	ID NUMERIC(19,0) PRIMARY KEY IDENTITY(1,1),
	UserName VARCHAR(100) NOT NULL
);


CREATE TABLE Timeline.Timeline (
	ID NUMERIC(19,0) PRIMARY KEY IDENTITY(1,1),
	UserID NUMERIC(19,0) NOT NULL,
	[Name] VARCHAR(200) NOT NULL,
	[Description] VARCHAR(1000),
	--TimeScaleID TINYINT NOT NULL FOREIGN KEY REFERENCES Timeline.TimeScale(ID),
	MinUnit TINYINT NOT NULL FOREIGN KEY REFERENCES Timeline.Unit(ID),
	MaxUnit TINYINT NOT NULL FOREIGN KEY REFERENCES Timeline.Unit(ID),
	CreatedDate DATETIME2(0),
	ModifiedDate DATETIME2(0),
	CONSTRAINT FK_Timeline_UserID FOREIGN KEY (UserID) REFERENCES Timeline.[User](ID)
);

CREATE TABLE Timeline.[Event] (
	ID NUMERIC(19,0) PRIMARY KEY IDENTITY(1,1),
	TimelineID NUMERIC(19,0) NOT NULL FOREIGN KEY REFERENCES Timeline.Timeline(ID),
	[Name] VARCHAR(100),
	Information VARCHAR(MAX),
	[When] DATETIME2(0),
	CreatedDate DATETIME2(0),
	ModifiedDate DATETIME2(0),
	CausedByID NUMERIC(19,0),
	CONSTRAINT FK_Event_CausedBy FOREIGN KEY (CausedByID) REFERENCES Timeline.[Event](ID)
);

CREATE TABLE Timeline.Tag (
	ID NUMERIC(19,0) PRIMARY KEY IDENTITY(1,1),
	[Value] VARCHAR(100) NOT NULL,
	CreatedDate DATETIME2(0)
);

CREATE TABLE Timeline.EventTag (
	EventID NUMERIC(19,0) NOT NULL FOREIGN KEY REFERENCES Timeline.[Event](ID),
	TagID NUMERIC(19,0) NOT NULL FOREIGN KEY REFERENCES Timeline.Tag(ID),
	CreatedDate DATETIME2(0),
	CONSTRAINT uc_eventtag_eventid_tagid UNIQUE(EventID,TagID)
);

CREATE TABLE Timeline.TimelineTag (
	TimelineID NUMERIC(19,0) NOT NULL FOREIGN KEY REFERENCES Timeline.Timeline(ID),
	TagID NUMERIC(19,0) NOT NULL FOREIGN KEY REFERENCES Timeline.Tag(ID),
	CreatedDate DATETIME2(0),
	CONSTRAINT uc_timelinetag_timelineid_tagid UNIQUE(TimelineID,TagID)
);


CREATE TABLE Timeline.[Status] (
	ID TINYINT PRIMARY KEY,
	[Name] VARCHAR(50) NOT NULL,
	[Description] VARCHAR(1000) NOT NULL
);



CREATE TABLE Timeline.MediaType (
	ID TINYINT PRIMARY KEY,
	[Name] VARCHAR(50) NOT NULL,
	[Description] VARCHAR(1000) NOT NULL
);


CREATE TABLE Timeline.EventReference (
	ID NUMERIC(19,0) PRIMARY KEY IDENTITY(1,1),
	EventID NUMERIC(19,0) NOT NULL FOREIGN KEY REFERENCES Timeline.[Event](ID),
	[URL] VARCHAR(2000) NOT NULL,
	SourceDate DATETIME2(0) NOT NULL,
	StatusID TINYINT NOT NULL FOREIGN KEY REFERENCES Timeline.[Status](ID),
	MediaTypeID TINYINT NOT NULL FOREIGN KEY REFERENCES Timeline.MediaType(ID),
	Notes VARCHAR(1000),
	CreatedDate DATETIME2(0) NOT NULL
);


